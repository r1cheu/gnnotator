# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there.


# load configuration
# -----------------------------------------------------
configfile: "config/config.yml"


import pandas as pd
from pathlib import Path

try:
    SAMPLES_DF = pd.read_csv("config/samples.tsv", sep="\t")
    SAMPLES = SAMPLES_DF["id"].tolist()

except FileNotFoundError:
    msg = "config/samples.tsv not found. Please ensure it exists and is correctly formatted."
    raise FileNotFoundError(msg)

for sample in SAMPLES:
    if not os.path.exists(f"data/assembly/{sample}.fa"):
        msg = f"Missing assembly data for sample {sample}. Expected file: data/assembly/{sample}.fa."
        raise ValueError(msg)
    for tissue in config["rna_seq_tissue"]:
        r1_path = f"data/rnaseq/{sample}_{tissue}_R1.fastq"
        r2_path = f"data/rnaseq/{sample}_{tissue}_R2.fastq"

        if not (os.path.exists(r1_path) and os.path.exists(r2_path)):
            msg = (
                f"Missing RNA-Seq data for sample {sample} and tissue {tissue}. "
                f"Expected files: {r1_path} and {r2_path}."
            )
            raise FileNotFoundError(msg)


# load rules
include: "rules/common.smk"
include: "rules/mask_repeat.smk"
include: "rules/map_rna.smk"
include: "rules/trinity.smk"
include: "rules/pasa.smk"
include: "rules/gene_prediction.smk"
include: "rules/evm_combine.smk"


# optional messages, log and error handling
onstart:
    print("\n--- Analysis started ---\n")


onsuccess:
    print("\n--- Workflow finished! ---\n")


onerror:
    print("\n--- An error occurred! ---\n")


# target rules
# -----------------------------------------------------
rule all:
    input:
        expand("results/evm/{sample}/{sample}.EVM.aa.fasta", sample=SAMPLES),
    default_target: True
